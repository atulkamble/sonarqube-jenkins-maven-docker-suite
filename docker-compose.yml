version: "3.8"

networks:
  devops-net:
    driver: bridge

volumes:
  pg_data:
  sonarqube_data:
  sonarqube_extensions:
  jenkins_home:
  maven_repo:

services:
  postgres:
    image: postgres:15
    container_name: pg-sonar
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-sonar}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sonarpass}
      POSTGRES_DB: ${POSTGRES_DB:-sonarqube}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - devops-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 10

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-sonarqube}
      SONAR_JDBC_USERNAME: ${POSTGRES_USER:-sonar}
      SONAR_JDBC_PASSWORD: ${POSTGRES_PASSWORD:-sonarpass}
      # Tune if you have >2GB RAM free for SonarQube
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - devops-net

  jenkins:
    build:
      context: ./jenkins
      dockerfile: Dockerfile
    container_name: jenkins
    restart: unless-stopped
    user: root
    environment:
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - maven_repo:/var/maven/repo
    networks:
      - devops-net
    depends_on:
      - sonarqube

  # Optional helper container to run Maven locally if you want (outside Jenkins)
  maven:
    image: maven:3.9-eclipse-temurin-17
    container_name: maven-cli
    working_dir: /workspace
    entrypoint: ["bash", "-lc"]
    command: ["mvn --version && bash"]
    volumes:
      - ./sample-app:/workspace
      - maven_repo:/root/.m2/repository
    networks:
      - devops-net
